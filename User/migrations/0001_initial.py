# Generated by Django 2.2 on 2019-04-17 13:49

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Account',
            fields=[
                ('id', models.CharField(max_length=15, primary_key=True, serialize=False, verbose_name='账号ID')),
                ('name', models.CharField(max_length=10, verbose_name='姓名')),
                ('password', models.CharField(max_length=30, verbose_name='密码')),
                ('available', models.BooleanField(blank=True, null=True, verbose_name='用户状态')),
            ],
            options={
                'verbose_name': '账号',
                'verbose_name_plural': '账号列表',
            },
        ),
        migrations.CreateModel(
            name='Campus',
            fields=[
                ('name', models.CharField(max_length=10, primary_key=True, serialize=False, verbose_name='校区名称')),
            ],
            options={
                'verbose_name': '校区',
                'verbose_name_plural': '校区列表',
            },
        ),
        migrations.CreateModel(
            name='Faculty',
            fields=[
                ('name', models.CharField(max_length=20, primary_key=True, serialize=False, verbose_name='系/所/中心')),
            ],
            options={
                'verbose_name': '系',
                'verbose_name_plural': '系列表',
            },
        ),
        migrations.CreateModel(
            name='Major',
            fields=[
                ('colledge_code', models.CharField(max_length=20, primary_key=True, serialize=False, verbose_name='校编专业代码')),
                ('national_code', models.CharField(max_length=20, verbose_name='国编专业代码')),
                ('name', models.CharField(max_length=10, verbose_name='专业名称')),
                ('faculty', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='User.Faculty', verbose_name='系')),
            ],
            options={
                'verbose_name': '专业',
                'verbose_name_plural': '专业列表',
            },
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'verbose_name': '学生',
                'verbose_name_plural': '学生列表',
            },
        ),
        migrations.CreateModel(
            name='Student_Category',
            fields=[
                ('name', models.CharField(max_length=30, primary_key=True, serialize=False, verbose_name='学生类别')),
            ],
            options={
                'verbose_name': '学生类别',
                'verbose_name_plural': '学生类别列表',
            },
        ),
        migrations.CreateModel(
            name='Student_Grade',
            fields=[
                ('name', models.CharField(max_length=10, primary_key=True, serialize=False, verbose_name='年级名称')),
            ],
            options={
                'verbose_name': '年级',
                'verbose_name_plural': '年级列表',
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name_used_before', models.CharField(blank=True, max_length=10, null=True, verbose_name='曾用名')),
                ('sex', models.IntegerField(choices=[(0, '男'), (1, '女')], verbose_name='性别')),
                ('birthday', models.DateField(blank=True, null=True, verbose_name='出生日期')),
                ('nation', models.CharField(blank=True, choices=[('汉族', '汉族'), ('蒙古族', '蒙古族'), ('回族', '回族'), ('藏族', '藏族'), ('维吾尔族', '维吾尔族'), ('苗族', '苗族'), ('彝族', '彝族'), ('壮族', '壮族'), ('布依族', '布依族'), ('朝鲜族', '朝鲜族'), ('满族', '满族'), ('侗族', '侗族'), ('瑶族', '瑶族'), ('白族', '白族'), ('土家族', '土家族'), ('哈尼族', '哈尼族'), ('哈萨克族', '哈萨克族'), ('傣族', '傣族'), ('黎族', '黎族'), ('僳僳族', '僳僳族'), ('佤族', '佤族'), ('畲族', '畲族'), ('高山族', '高山族'), ('拉祜族', '拉祜族'), ('水族', '水族'), ('东乡族', '东乡族'), ('纳西族', '纳西族'), ('景颇族', '景颇族'), ('柯尔克孜族', '柯尔克孜族'), ('土族', '土族'), ('达斡尔族', '达斡尔族'), ('仫佬族', '仫佬族'), ('羌族', '羌族'), ('布朗族', '布朗族'), ('撒拉族', '撒拉族'), ('毛南族', '毛南族'), ('仡佬族', '仡佬族'), ('锡伯族', '锡伯族'), ('阿昌族', '阿昌族'), ('普米族', '普米族'), ('塔吉克族', '塔吉克族'), ('怒族', '怒族'), ('乌孜别克族', '乌孜别克族'), ('俄罗斯族', '俄罗斯族'), ('鄂温克族', '鄂温克族'), ('德昂族', '德昂族'), ('保安族', '保安族'), ('裕固族', '裕固族'), ('京族', '京族'), ('塔塔尔族', '塔塔尔族'), ('独龙族', '独龙族'), ('鄂伦春族', '鄂伦春族'), ('赫哲族', '赫哲族'), ('门巴族', '门巴族'), ('珞巴族', '珞巴族'), ('基诺族', '基诺族')], max_length=8, null=True, verbose_name='民族')),
                ('political', models.IntegerField(blank=True, choices=[(1, '中共党员'), (2, '中共预备党员'), (3, '共青团员'), (4, '民革党员'), (5, '民盟盟员'), (6, '民建会员'), (7, '民进会员'), (8, '农工党党员'), (9, '致公党党员'), (10, '九三学社社员'), (11, '台盟盟员'), (12, '无党派人士'), (13, '群众')], null=True, verbose_name='政治面貌')),
                ('religious_belief', models.CharField(blank=True, max_length=10, null=True, verbose_name='宗教信仰')),
                ('native_place', models.CharField(blank=True, max_length=5, null=True, verbose_name='籍贯')),
                ('id_number', models.CharField(blank=True, max_length=20, null=True, verbose_name='身份证号')),
                ('mobile_phone', models.CharField(blank=True, max_length=20, null=True, verbose_name='手机')),
                ('email', models.EmailField(blank=True, max_length=254, null=True, verbose_name='电子邮箱')),
                ('qq', models.CharField(blank=True, max_length=20, null=True, verbose_name='QQ')),
                ('country_and_region', models.CharField(choices=[('AD', 'AD安道尔'), ('AE', 'AE阿联酋'), ('AF', 'AF阿富汗'), ('AG', 'AG安提瓜和巴布达'), ('AI', 'AI安圭拉'), ('AL', 'AL阿尔巴尼亚'), ('AM', 'AM亚美尼亚'), ('AO', 'AO安哥拉'), ('AR', 'AR阿根廷'), ('AT', 'AT奥地利'), ('AU', 'AU澳大利亚'), ('AW', 'AW阿鲁巴'), ('AZ', 'AZ阿塞拜疆'), ('BA', 'BA波黑'), ('BB', 'BB巴巴多斯'), ('BD', 'BD孟加拉'), ('BE', 'BE比利时'), ('BF', 'BF布基纳法索'), ('BG', 'BG保加利亚'), ('BH', 'BH巴林'), ('BI', 'BI布隆迪'), ('BJ', 'BJ贝宁'), ('BM', 'BM百慕大'), ('BN', 'BN文莱'), ('BO', 'BO玻利维亚'), ('BR', 'BR巴西'), ('BS', 'BS巴哈马'), ('BT', 'BT不丹'), ('BV', 'BV挪威布韦岛'), ('BW', 'BW博茨瓦纳'), ('BY', 'BY白俄罗斯'), ('BZ', 'BZ伯利兹'), ('CA', 'CA加拿大'), ('CF', 'CF中非共和国'), ('CG', 'CG刚果'), ('CH', 'CH瑞士'), ('CI', 'CI科特迪瓦'), ('CK', 'CK库克群岛'), ('CL', 'CL智利'), ('CM', 'CM喀麦隆'), ('CN', 'CN中国'), ('CO', 'CO哥伦比亚'), ('CR', 'CR哥斯达黎加'), ('CU', 'CU古巴'), ('CV', 'CV佛得角'), ('CX', 'CX澳大利亚圣诞岛'), ('CY', 'CY塞浦路斯'), ('CZ', 'CZ捷克共和国'), ('DE', 'DE德国'), ('DJ', 'DJ吉布提'), ('DK', 'DK丹麦'), ('DM', 'DM多明哥'), ('DO', 'DO多米尼加'), ('DZ', 'DZ阿尔及利亚'), ('EC', 'EC厄瓜多尔'), ('EE', 'EE爱沙尼亚'), ('EG', 'EG埃及'), ('EH', 'EH西撒哈拉'), ('ES', 'ES西班牙'), ('ET', 'ET埃塞俄比亚'), ('FI', 'FI芬兰'), ('FJ', 'FJ斐济'), ('FK', 'FK福克兰群岛'), ('FM', 'FM密克罗尼西亚'), ('FR', 'FR法国'), ('GA', 'GA加蓬'), ('GB', 'GB英国'), ('GD', 'GD格林纳达'), ('GE', 'GE格鲁吉亚'), ('GF', 'GF法属圭亚那'), ('GH', 'GH加纳'), ('GI', 'GI直布罗陀'), ('GL', 'GL格陵兰'), ('GM', 'GM冈比亚'), ('GN', 'GN几内亚'), ('GP', 'GP瓜德罗普'), ('GQ', 'GQ赤道几内亚'), ('GR', 'GR希腊'), ('GT', 'GT危地马拉'), ('GU', 'GU关岛'), ('GW', 'GW几内亚比绍'), ('GY', 'GY圭亚那'), ('HK', 'HK中国香港'), ('HN', 'HN洪都拉斯'), ('HR', 'HR克罗地亚'), ('HT', 'HT海地'), ('HU', 'HU匈牙利'), ('ID', 'ID印度尼西亚'), ('IE', 'IE爱尔兰'), ('IL', 'IL以色列'), ('IN', 'IN印度'), ('IQ', 'IQ伊拉克'), ('IR', 'IR伊朗'), ('IS', 'IS冰岛'), ('IT', 'IT意大利'), ('JM', 'JM牙买加'), ('JO', 'JO约旦'), ('JP', 'JP日本'), ('KE', 'KE肯尼亚'), ('KG', 'KG吉尔吉斯斯坦'), ('KH', 'KH柬埔寨'), ('KI', 'KI基里巴斯'), ('KM', 'KM科摩罗'), ('KP', 'KP朝鲜'), ('KR', 'KR韩国'), ('KW', 'KW科威特'), ('KY', 'KY开曼群岛'), ('KZ', 'KZ哈萨克斯坦'), ('LA', 'LA老挝'), ('LB', 'LB黎巴嫩'), ('LC', 'LC圣卢西亚'), ('LI', 'LI列支敦士登'), ('LK', 'LK斯里兰卡'), ('LR', 'LR利比里亚'), ('LS', 'LS莱索托'), ('LT', 'LT立陶宛'), ('LU', 'LU卢森堡'), ('LV', 'LV拉托维亚'), ('LY', 'LY利比亚'), ('MA', 'MA摩洛哥'), ('MD', 'MD摩尔多瓦'), ('MG', 'MG马达加斯加'), ('MH', 'MH马绍尔群岛'), ('ML', 'ML马里'), ('MM', 'MM缅甸'), ('MN', 'MN蒙古'), ('MO', 'MO中国澳门'), ('MR', 'MR毛里塔尼亚'), ('MT', 'MT马耳他'), ('MU', 'MU毛里求斯'), ('MV', 'MV马尔代夫'), ('MW', 'MW马拉维'), ('MX', 'MX墨西哥'), ('MY', 'MY马来西亚'), ('MZ', 'MZ莫桑比克'), ('NA', 'NA纳米比亚'), ('NC', 'NC新喀里多尼亚'), ('NE', 'NE尼日尔'), ('NG', 'NG尼日利亚'), ('NI', 'NI尼加拉瓜'), ('NL', 'NL荷兰'), ('NO', 'NO挪威'), ('NP', 'NP尼泊尔'), ('NR', 'NR瑙鲁'), ('NU', 'NU纽埃'), ('NZ', 'NZ新西兰'), ('OM', 'OM阿曼'), ('PA', 'PA巴拿马'), ('PE', 'PE秘鲁'), ('PF', 'PF法属玻里尼西亚'), ('PG', 'PG巴布亚新几内亚'), ('PH', 'PH菲律宾'), ('PK', 'PK巴基斯坦'), ('PL', 'PL波兰'), ('PN', 'PN皮特开恩群岛'), ('PT', 'PT葡萄牙'), ('PW', 'PW帕劳'), ('PY', 'PY巴拉圭'), ('QA', 'QA卡塔尔'), ('RO', 'RO罗马尼亚'), ('RU', 'RU俄罗斯'), ('RW', 'RW卢旺达'), ('SA', 'SA沙特阿拉伯'), ('SB', 'SB所罗门群岛'), ('SC', 'SC塞舌尔'), ('SD', 'SD苏丹'), ('SE', 'SE瑞典'), ('SG', 'SG新加坡'), ('SH', 'SH圣赫勒那'), ('SI', 'SI斯洛文尼亚'), ('SK', 'SK斯洛伐克'), ('SL', 'SL塞拉利昂'), ('SM', 'SM圣马力诺'), ('SN', 'SN塞内加尔'), ('SO', 'SO索马里'), ('SR', 'SR苏里南'), ('ST', 'ST圣多美与普林西比'), ('SV', 'SV萨尔瓦多'), ('SY', 'SY叙利亚'), ('SZ', 'SZ斯威士兰'), ('TD', 'TD乍得'), ('TF', 'TF法属南方领土'), ('TG', 'TG多哥'), ('TH', 'TH泰国'), ('TJ', 'TJ塔吉克斯坦'), ('TK', 'TK托克劳'), ('TM', 'TM土库曼斯坦'), ('TN', 'TH突尼斯'), ('TO', 'TO汤加'), ('TP', 'TP东帝汶'), ('TR', 'TR土尔其'), ('TT', 'TT特立尼达和多巴哥'), ('TV', 'TV图瓦卢'), ('TW', 'TW中国台湾'), ('TZ', 'TZ坦桑尼亚'), ('UA', 'UA乌克兰'), ('UG', 'UG乌干达'), ('UK', 'UK英国'), ('US', 'US美国'), ('UY', 'UY乌拉圭'), ('UZ', 'UZ乌兹别克斯坦'), ('VA', 'VA梵蒂冈'), ('VE', 'VE委内瑞拉'), ('VN', 'VN越南'), ('WS', 'WS西萨摩亚'), ('YE', 'YE也门'), ('YU', 'YU南斯拉夫'), ('ZA', 'ZA南非'), ('ZM', 'ZM赞比亚'), ('ZR', 'ZR扎伊尔'), ('ZW', 'ZW津巴布韦')], default='CN', max_length=3, verbose_name='国家或地区')),
                ('personal_page', models.CharField(blank=True, max_length=50, null=True, verbose_name='个人主页')),
                ('marriage', models.BooleanField(blank=True, null=True, verbose_name='婚否')),
                ('account', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='User.Account')),
                ('creator', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='User.User', verbose_name='用户创建者')),
            ],
            options={
                'verbose_name': '用户',
                'verbose_name_plural': '用户列表',
            },
        ),
        migrations.CreateModel(
            name='Undergraduate',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('student', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='User.Student')),
            ],
            options={
                'verbose_name': '本科生',
                'verbose_name_plural': '本科生列表',
            },
        ),
        migrations.CreateModel(
            name='Teacher',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('masters_supervisor', models.BooleanField(blank=True, null=True, verbose_name='硕士生导师')),
                ('doctoral_supervisor', models.BooleanField(blank=True, null=True, verbose_name='博士生导师')),
                ('home_phone', models.CharField(blank=True, max_length=20, null=True, verbose_name='家庭电话')),
                ('office_phone', models.CharField(blank=True, max_length=20, null=True, verbose_name='办公电话')),
                ('personal_profile', models.TextField(blank=True, max_length=1000, null=True, verbose_name='个人简介')),
                ('faculty', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='User.Faculty', verbose_name='系')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='User.User')),
            ],
            options={
                'verbose_name': '教师',
                'verbose_name_plural': '教师列表',
            },
        ),
        migrations.CreateModel(
            name='Student_Class',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=10, verbose_name='班级名称')),
                ('campus', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='User.Campus', verbose_name='校区')),
                ('grade', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='User.Student_Grade', verbose_name='年级')),
                ('headmaster', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='headmaster_teacher', to='User.Teacher', verbose_name='班导师')),
                ('instructor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='instructor_teacher', to='User.Teacher', verbose_name='辅导员')),
                ('major', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='User.Major', verbose_name='专业')),
            ],
            options={
                'verbose_name': '班级',
                'verbose_name_plural': '班级列表',
                'unique_together': {('grade', 'major', 'name')},
            },
        ),
        migrations.AddField(
            model_name='student',
            name='student_category',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='User.Student_Category', verbose_name='学生类别'),
        ),
        migrations.AddField(
            model_name='student',
            name='student_class',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='User.Student_Class', verbose_name='班级'),
        ),
        migrations.AddField(
            model_name='student',
            name='user',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='User.User'),
        ),
        migrations.CreateModel(
            name='Graduate',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('student', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='User.Student')),
                ('tutor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='User.Teacher', verbose_name='导师')),
            ],
            options={
                'verbose_name': '研究生',
                'verbose_name_plural': '研究生列表',
            },
        ),
    ]
